name: Codequality
on:
  - push
jobs:
  harden_actions:
    name: Harden actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@aadec899646c8e0f34c52d9219c2faac36626b55
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@ba37328d4ea95eaf8b3bd6c6cef308f709a5f2ec
  test:
    name: Install and test
    needs: harden_actions
    runs-on: ubuntu-latest
    env:
      wordpress-cache-key: 1.0.0
      bats-cache-key: 1.0.0
    steps:
      - name: Checkout code
        uses: actions/checkout@aadec899646c8e0f34c52d9219c2faac36626b55
        with:
          ref: ${{ github.ref_name || github.base_ref }}
      - name: Install PHP
        uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d
        with:
          php-version: '8.2'
          extensions: pdo
      - name: Install MySQL
        uses: shogo82148/actions-setup-mysql@e67c00aa3a23825c685b5d978336f29a78d7a532
        with:
          mysql-version: '8.0'
      - name: Create DB
        run: mysql -uroot -e 'Create database wordpress'
      - name: Use Wordpress file cache
        id: cache-wordpress
        uses: actions/cache@dc88ab52d723eb4cc3a0af43f6bee825c4742280
        with:
          path: .
          key: ${{ env.wordpress-cache-key }}
      - name: Setup Wordpress files
        if: steps.cache-wordpress.outputs.cache-hit != 'true'
        run: |
              wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
              chmod +x ./wp-cli.phar
              ./wp-cli.phar core download --path=. --locale=en_US
              ./wp-cli.phar config create --dbhost='127.0.0.1' --dbname='wordpress' --dbuser='root' --dbpass=''
              ./wp-cli.phar config set WP_HOME 'http://localhost:8080'
              ./wp-cli.phar config set WP_SITEURL 'http://localhost:8080'
      - name: Install Wordpress
        run:  |
              ./wp-cli.phar core install --url='http://localhost:8080' --title='Varnish Cache' --admin_user='admin' --admin_password='admin' --admin_email='info@admin.fake'
              ./wp-cli.phar rewrite structure '/%postname%/'
      - name: Start PHP webserver
        run:  nohup php -S 127.0.0.1:8080 &
      - name: Setup Varnish
        uses: myci-actions/add-deb-repo@757d43d1ef9d556deafc5e98468f2931f8dd1de6
        with:
          repo: deb https://packagecloud.io/varnishcache/varnish70/ubuntu/ focal main
          repo-name: varnish
          keys-asc: https://packagecloud.io/varnishcache/varnish70/gpgkey
          install: varnish
      - name: Use BATS cache
        id: cache-bats
        uses: actions/cache@dc88ab52d723eb4cc3a0af43f6bee825c4742280
        with:
          path: ./bats
          key: ${{ env.bats-cache-key }}
      - name: Install BATS
        if: steps.cache-batch.outputs.cache-hit != 'true'
        run: |
          branch=master
          batstmp="$(mktemp -d bats-core-"${branch}".XXXXX)"
          pushd "${batstmp}" &> /dev/null || return 11
          curl -sSLO https://github.com/bats-core/bats-core/archive/refs/heads/"${branch}".zip
          unzip -qo "${branch}".zip
          mkdir ./bats
          sudo bash "${batstmp}"/bats-core-"${branch}"/install.sh ./bats
          popd &> /dev/null || return 12
          curl -sSLO https://github.com/bats-core/bats-support/archive/refs/heads/"${branch}-support".zip
          curl -sSLO https://github.com/bats-core/bats-assert/archive/refs/heads/"${branch}-assert".zip
          mkdir -p ./bats/bats-support
          mkdir -p ./bats/bats-assert
          unzip ${branch}-support.zip -d ./bats/bats-support
          unzip ${branch}-assert.zip -d ./bats/bats-assert
          rm ${branch}-support.zip
          rm ${branch}-assert.zip
      - name: Run tests
        run: ./bats/bin/bats ./tests/testAll.bats

      
